name: Back CI avec SonarCloud

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  build-and-test:
    name: ðŸš€ Build and Test
    runs-on: ubuntu-latest

    steps:
      - name: ðŸ“¥ Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.ref }}

      - name: ðŸ”„ Fetch target branch for SonarCloud
        run: git fetch origin ${{ github.base_ref }}:${{ github.base_ref }}

      - name: ðŸ§° Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: ðŸš¦ SonarCloud - Begin Scan
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          dotnet tool install --global dotnet-sonarscanner
          dotnet sonarscanner begin \
            /k:"RoiPorci_AiConclave" \
            /o:"roiporci" \
            /d:sonar.host.url="https://sonarcloud.io" \
            /d:sonar.token="$SONAR_TOKEN" \
            /d:sonar.cs.opencover.reportsPaths="**/coverage.opencover.xml" \
            /d:sonar.scanner.scanAll=false

      - name: ðŸ“¦ Restore dependencies
        run: dotnet restore Back/AiConclave.Api.sln

      - name: ðŸ”¨ Build solution
        run: dotnet build Back/AiConclave.Api.sln --configuration Release --no-restore

      - name: âœ… Run unit tests with coverage
        run: dotnet test Back/AiConclave.Api.sln --no-build --configuration Release --verbosity normal --collect:"XPlat Code Coverage"

      - name: ðŸš¦ SonarCloud - End Scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          dotnet sonarscanner end /d:sonar.token="$SONAR_TOKEN"
